import "u-test" as test
import "parser.util" as { :dump }
import "parser.ast" as { :parse }
import "virtual_table" as { :VirtualTable }


load_table = (spec) ->
  ast = parse(spec)
  test.is_not_nil ast
  VirtualTable ast

test_list_equal = (t1, t2) ->
  test.equal type(t1), "table"
  test.equal type(t2), "table"
  test.equal #t1, #t2
  table.sort(t1)
  table.sort(t2)
  for i = 1, #t1
    test.equal t1[i], t2[i]

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

const table1 = [[ \
 aaa|b|cc
|d|eeeee|f
===
hlines vlines boxed .style1 .style2 fg(red) bg(blue) align(lb) 
]] |> load_table()

--------------------------------------------------------------------------------

test.table1["can create vt"] = () ->
  t = load_table("1 | 2 | 3\na|b|c")
  test.is_not_nil t

--------------------------------------------------------------------------------
test.table1["table-wide options are transferred"] = () ->
  test.equal table1.h_align, "l"
  test.equal table1.v_align, "b"
  test.equal table1.bg, "blue"
  test.equal table1.fg, "red"

  test_list_equal table1.styles, 
    {
      "tbl-hlines", "tbl-boxed", "tbl-vlines",
      "style1", "style2"
    }


--------------------------------------------------------------------------------
test.table1["default colspecs are created"] = () ->
  for i = 1, #table1.colspecs
    test.equal table1.colspecs[i][1], "c"
    test.equal table1.colspecs[i][2], "ColWidthDefault"

--------------------------------------------------------------------------------
test.table1["cell contents are copied in"] = () ->
  t = table1.table
  test.equal t[1][1].content[1], "aaa"
  test.equal t[1][2].content[1], "b"
  test.equal t[1][3].content[1], "cc"
  test.equal t[2][1].content[1], "d"
  test.equal t[2][2].content[1], "eeeee"
  test.equal t[2][3].content[1], "f"

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
const table2 = [[ \
 x|y|z
|1|22|3
===
r1 = fg(red)
r2 = bg(green)
r2:c2 = bg(pink)
]] |> load_table()

--------------------------------------------------------------------------------

test.table2["selector attributes are copied into cells"] = () ->
  t = table2.table

  for col = 1,3
    test.equal t[1][col].fg, "red"

  test.equal t[2][1].bg, "green" 
  test.equal t[2][2].bg, "pink" 
  test.equal t[2][3].bg, "green"

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------

--------------------------------------------------------------------------------

test.summary!
