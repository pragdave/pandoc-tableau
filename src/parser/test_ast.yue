import "u-test" as test
import "parser.util" as { :dump }
import "parser.ast" as { :parse }

print "\n\nTEST AST\n"

--------------------------------------------------------------------------------

const tglobal = \
[[ c1 | c2 | c3
d1 | d2 | d3
===
hlines fg(red)
align(l)
]]

test.ast["Some global options"] = () ->
  ast = parse(tglobal)
  test.is_true ast.table_flags.hlines
  fmt = ast.table_formats
  f1 = fmt[1]
  test.equal f1.color_type, "named-color"
  test.equal f1.name, "red"
  test.equal f1.type, "fg"
  f2 = fmt[2]
  test.equal f2.type, "align"
  test.equal f2.spec, "l"

--------------------------------------------------------------------------------

const t1 = \
[[ c1 | c2 | c3
d1 | d2 | d3
===
-- ignore this line and the blank that follows

# Caption, My Caption
]]

test.ast["basic table with caption"] = () ->
  ast = parse(t1)
  test.equal ast.caption, "Caption, My Caption"

--------------------------------------------------------------------------------

const t2 = \
[[ c1 | c2 | c3
d1 | d2 | d3
===
  r2-4 = fg(red2) width(20)
]]

test.ast["single selector row with two formats"] = () ->
  ast = parse(t2)
  sf  = ast.selector_formats[1]
  sel = sf.selector
  f   = sf.formats
  test.equal 2, #f
  fg = f[1]
  test.equal fg.type, "fg"
  test.equal fg.name, "red"
  test.equal fg.color_type, "named-color"
  w = f[2]
  test.equal w.spec, 20
  test.equal w.type, "width"
